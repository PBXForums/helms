
# In this example, we are using secrets stored in the same namespace as the Netbird deployment.
# It uses authentik as the IdP manager.
# The secrets are created by the user and are not part of the Netbird chart.

ingress:
  enabled: true
  className: public
  annotations:
    cert-manager.io/cluster-issuer: example-issuer
  hosts:
    - host: netbird-dashboard.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: netbird-dashboard-tls
      hosts:
        - netbird-dashboard.example.com
image:
  tag: v2.6.0
env:
  # Endpoints
  NETBIRD_MGMT_API_ENDPOINT: https://netbird.example.com:443
  NETBIRD_MGMT_GRPC_API_ENDPOINT: https://netbird.example.com:443
  # OIDC
  AUTH_CLIENT_SECRET:
  AUTH_AUTHORITY: https://idp.example.com/application/o/example-netbird/
  USE_AUTH0: false
  AUTH_SUPPORTED_SCOPES: openid profile email offline_access api
  AUTH_REDIRECT_URI:
  AUTH_SILENT_REDIRECT_URI:
  NETBIRD_TOKEN_SOURCE: accessToken
  NGINX_SSL_PORT:
  LETSENCRYPT_DOMAIN:
  LETSENCRYPT_EMAIL:
envRaw:
  - name: AUTH_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: netbird-management
        key: idpClientID
  - name: AUTH_AUDIENCE
    valueFrom:
      secretKeyRef:
        name: netbird-management
        key: idpClientID

### The k8s secret should look like this (shared with netbird deployment):

#apiVersion: v1
#kind: Secret
#metadata:
#  name: netbird-management
#type: Opaque
#data:
#  idpClientID: xxxxxx
#  idpServiceAccountPassword: xxxxxx
#  idpServiceAccountUser: xxxxxx
#  postgresDSN: xxxxxx
#  relayPassword: xxxxxx
#  stunServer: xxxxxx
#  turnServer: xxxxxx
#  turnServerPassword: xxxxxx
#  turnServerUser: xxxxxx
