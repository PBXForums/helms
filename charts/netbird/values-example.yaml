# In this example, we are using secrets stored in the same namespace as the Netbird deployment.
# It uses authentik as the IdP manager and an external PostgreSQL as the store engine.
# The secrets are created by the user and are not part of the Netbird chart.
# Refer to [vals](https://github.com/helmfile/vals) for reference on how to create the secrets.
management:
  configmap: |-
    {
      "Stuns": [
        {
          "Proto": "udp",
          "URI": "stun:ref+k8s://v1/Secret/netbird/netbird-management/stunServer+",
          "Username": "",
          "Password": ""
        }
      ],
      "TURNConfig": {
        "TimeBasedCredentials": false,
        "CredentialsTTL": "12h0m0s",
        "Secret": "secret",
        "Turns": [
          {
            "Proto": "udp",
            "URI": "turn:ref+k8s://v1/Secret/netbird/netbird-management/turnServer+",
            "Username": "ref+k8s://v1/Secret/netbird/netbird-management/turnServerUser+",
            "Password": "ref+k8s://v1/Secret/netbird/netbird-management/turnServerPassword+"
          }
        ]
      },
      "Relay": {
        "Addresses": [
          "rels://netbird.example.com:443/relay"
        ],
        "CredentialsTTL": "24h",
        "Secret": "ref+k8s://v1/Secret/netbird/netbird-management/relayPassword+"
      },
      "Signal": {
        "Proto": "https",
        "URI": "netbird.example.com:443",
        "Username": "",
        "Password": ""
      },
      "HttpConfig": {
        "LetsEncryptDomain": "",
        "CertFile": "",
        "CertKey": "",
        "AuthAudience": "ref+k8s://v1/Secret/netbird/netbird-management/idpClientID+",
        "AuthIssuer": "https://idp.example.com/application/o/example-netbird/",
        "AuthUserIDClaim": "",
        "AuthKeysLocation": "https://idp.example.com/application/o/example-netbird/jwks/",
        "OIDCConfigEndpoint": "https://idp.example.com/application/o/example-netbird/.well-known/openid-configuration",
        "IdpSignKeyRefreshEnabled": false
      },
      "IdpManagerConfig": {
        "ManagerType": "authentik",
        "ClientConfig": {
          "Issuer": "https://idp.example.com/application/o/example-netbird",
          "TokenEndpoint": "https://idp.example.com/application/o/token/",
          "ClientID": "ref+k8s://v1/Secret/netbird/netbird-management/idpClientID+",
          "ClientSecret": "",
          "GrantType": "client_credentials"
        },
        "ExtraConfig": {
          "Password": "ref+k8s://v1/Secret/netbird/netbird-management/idpServiceAccountPassword+",
          "Username": "ref+k8s://v1/Secret/netbird/netbird-management/idpServiceAccountUser+"
        },
        "Auth0ClientCredentials": null,
        "AzureClientCredentials": null,
        "KeycloakClientCredentials": null,
        "ZitadelClientCredentials": null
      },
      "DeviceAuthorizationFlow": {
        "Provider": "hosted",
        "ProviderConfig": {
          "ClientID": "ref+k8s://v1/Secret/netbird/netbird-management/idpClientID+",
          "ClientSecret": "",
          "Domain": "idp.example.com",
          "Audience": "ref+k8s://v1/Secret/netbird/netbird-management/idpClientID+",
          "TokenEndpoint": "https://idp.example.com/application/o/token/",
          "DeviceAuthEndpoint": "https://idp.example.com/application/o/device/",
          "AuthorizationEndpoint": "",
          "Scope": "openid",
          "UseIDToken": false,
          "RedirectURLs": null
        }
      },
      "PKCEAuthorizationFlow": {
        "ProviderConfig": {
          "ClientID": "ref+k8s://v1/Secret/netbird/netbird-management/idpClientID+",
          "ClientSecret": "",
          "Domain": "",
          "Audience": "ref+k8s://v1/Secret/netbird/netbird-management/idpClientID+",
          "TokenEndpoint": "https://idp.example.com/application/o/token/",
          "DeviceAuthEndpoint": "",
          "AuthorizationEndpoint": "https://idp.example.com/application/o/authorize/",
          "Scope": "openid profile email offline_access api",
          "UseIDToken": false,
          "RedirectURLs": [
            "http://localhost:53000"
          ]
        }
      },
      "StoreConfig": {
        "Engine": "postgres"
      },
      "ReverseProxy": {
        "TrustedHTTPProxies": null,
        "TrustedHTTPProxiesCount": 0,
        "TrustedPeers": null
      }
    }

  image:
    tag: 0.30.0

  ingress:
    enabled: true
    className: public
    annotations:
      cert-manager.io/cluster-issuer: example-issuer
    hosts:
      - host: netbird.example.com
        paths:
          - path: /api
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-api-tls
        hosts:
          - netbird.example.com
  ingressGrpc:
    enabled: true
    className: public
    annotations:
      cert-manager.io/cluster-issuer: example-issuer
      nginx.ingress.kubernetes.io/backend-protocol: GRPC
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/server-snippet: |
        grpc_connect_timeout 3600s;
        grpc_read_timeout 3600s;
        grpc_send_timeout 3600s;
    hosts:
      - host: netbird.example.com
        paths:
          - path: /management.ManagementService
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-grpc-tls
        hosts:
          - netbird.example.com

  persistentVolume:
    enabled: false
    accessModes:
      - ReadWriteOnce
    size: 100Mi

  envRaw:
    - name: NETBIRD_STORE_ENGINE_POSTGRES_DSN
      valueFrom:
        secretKeyRef:
          name: netbird-management
          key: postgresDSN

signal:
  image:
    tag: 0.30.0
  ingress:
    enabled: true
    className: public
    annotations:
      cert-manager.io/cluster-issuer: example-issuer
      nginx.ingress.kubernetes.io/backend-protocol: GRPC
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/server-snippet: |
        grpc_connect_timeout 3600s;
        grpc_read_timeout 3600s;
        grpc_send_timeout 3600s;
    hosts:
      - host: netbird.example.com
        paths:
          - path: /signalexchange.SignalExchange
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-signal-tls
        hosts:
          - netbird.example.com


relay:
  image:
    tag: 0.30.0
  ingress:
    enabled: true
    className: public
    annotations:
      cert-manager.io/cluster-issuer: example-issuer
    hosts:
      - host: netbird.example.com
        paths:
          - path: /relay
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-relay-tls
        hosts:
          - netbird-relay.example.com
  envRaw:
    - name: NB_AUTH_SECRET
      valueFrom:
        secretKeyRef:
          name: netbird-management
          key: relayPassword
    - name: NB_LOG_LEVEL
      value: info
    - name: NB_LISTEN_ADDRESS
      value: ":33080"
    - name: NB_EXPOSED_ADDRESS
      value: rels://netbird.example.com:443/relay

### The k8s secret should look like this:

#apiVersion: v1
#kind: Secret
#metadata:
#  name: netbird-management
#type: Opaque
#data:
#  idpClientID: xxxxxx
#  idpServiceAccountPassword: xxxxxx
#  idpServiceAccountUser: xxxxxx
#  postgresDSN: xxxxxx
#  relayPassword: xxxxxx
#  stunServer: xxxxxx
#  turnServer: xxxxxx
#  turnServerPassword: xxxxxx
#  turnServerUser: xxxxxx
